{
  "openapi": "3.0.1",
  "info": {
    "title": "TMF724",
    "description": "Alias: <b>tmf</b> Service type: <b>API</b> Date: <b>16 May 2024</b><br/><br/><b>TMF API Reference : TMF - 724 Incident</b><br/><br/><p>**TMF API Reference : TMF - 724 Incident**</p><p>**Release : 22.5 - November 2022**</p><p>The Incident API provides a standardized client interface to Incident Management Systems for creating, tracking and managing Incidents as a result of an issue or problem identified by a customer or another system. \\nExamples of Incident API originators (clients) include CRM applications, network management or fault management systems, or other Incident management systems (e.g. B2B).\\n\\nThe API supports the ability to send requests to create a new Incident specifying the nature and severity of the trouble or issue as well as all necessary related information. The API also includes mechanisms to search for and update existing Incidents. Notifications are defined to provide information when a Incident has been updated, including status changes. A basic set of states of a Incident has been specified (as an example) to handle Incident lifecycle management.\\nIncident API manages Incident resource:\\n\\n&nbsp;-\\tA Incident represents a record, or an issue raised by requestor that need to be solved, used for reporting and managing the resolution of problems, incidents or request -\\tThe main Incident attributes are its name, priority, type,&nbsp;dateTime attributes (occurTime, expected resolution, resolution), state and related information (change reason and change date), related parties (originator, owner, reviser, etc.), related entities (product, product order, customer bill) and notes Incident API performs the following operations on Incident:</p><ul><li>Creation of an Diagnose Incident (with creation of an Incident)</li></ul><p><br></p><p>Other Incident API operations on Incident -&nbsp;<strong>TO BE DONE</strong></p><p>Notification of events on Incident -&nbsp;<strong>TO BE DONE</strong></p>",
    "termsOfService": "https://app.mef.dev/terms",
    "contact": {
      "name": "Catalyst C24.0.636",
      "url": "https://app.mef.dev/store/tenant/139",
      "email": "sergiy.polovnikov@natec.tech"
    },
    "version": "1.0.0.3"
  },
  "servers": [
    {
      "url": "https://api.mef.dev/api/v2/tmf",
      "description": "Main server"
    }
  ],
  "paths": {
    "/Incident/diagnoseIncident": {
      "post": {
        "tags": [
          "Incident"
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiagnoseIncidentFull"
              },
              "examples": {
                "Create DiagnoseIncident": {
                  "summary": "Create DiagnoseIncident",
                  "description": "This operation creates a DiagnoseIncident and This operation creates a DiagnoseIncident and Incident entitiesentities on base provided Category of  the This operation creates a DiagnoseIncident and Incident entities",
                  "value": {
                    "id": null,
                    "errorLog": null,
                    "incident": {
                      "id": "null",
                      "category": "software fault",
                      "incidentDetail": "router ping is not successfull",
                      "incidentResolutionSuggestion": null,
                      "rootCause": null,
                      "name": "Incident router",
                      "@type": "Incident"
                    },
                    "state": null,
                    "@type": "DiagnoseIncident"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Create DiagnoseIncident",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiagnoseIncident"
                },
                "examples": {
                  "Create DiagnoseIncident": {
                    "summary": "",
                    "description": "",
                    "value": {
                      "id": 3333,
                      "errorLog": null,
                      "incident": {
                        "id": "222",
                        "name": "Incident router",
                        "@type": "IncidentRef"
                      },
                      "state": "accepted",
                      "@type": "DiagnoseIncident"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The server cannot or will not process the request. The client should not repeat this request without modification",
            "content": {
              "application/json": {
                "example": {
                  "status": 400,
                  "code": -2146233088,
                  "message": "Error message",
                  "type": "ErrorType"
                }
              }
            }
          },
          "401": {
            "description": "The specified login/password pair is incorrect",
            "content": {
              "application/json": {
                "example": {
                  "status": 401,
                  "code": -2146233088,
                  "message": "Error message",
                  "type": "ErrorType"
                }
              }
            }
          },
          "403": {
            "description": "You do not have access to requested resource",
            "content": {
              "application/json": {
                "example": {
                  "status": 403,
                  "code": -2146233088,
                  "message": "Error message",
                  "type": "ErrorType"
                }
              }
            }
          },
          "404": {
            "description": "The request URL is incorrect",
            "content": {
              "application/json": {
                "example": {
                  "status": 404,
                  "code": -2146233088,
                  "message": "Error message",
                  "type": "ErrorType"
                }
              }
            }
          },
          "405": {
            "description": "The resource you are requesting doesn't support the request HTTP method",
            "content": {
              "application/json": {
                "example": {
                  "status": 405,
                  "code": -2146233088,
                  "message": "Error message",
                  "type": "ErrorType"
                }
              }
            }
          },
          "408": {
            "description": "You need to repeat the request immediately",
            "content": {
              "application/json": {
                "example": {
                  "status": 408,
                  "code": -2146233088,
                  "message": "Error message",
                  "type": "ErrorType"
                }
              }
            }
          },
          "409": {
            "description": "The request cannot be processed due to a conflict, for example, a parallel request conflict - is usually the result of an incorrect (too short) timeout waiting for a response or command execution. It is necessary to repeat the request after a while",
            "content": {
              "application/json": {
                "example": {
                  "status": 409,
                  "code": -2146233088,
                  "message": "Error message",
                  "type": "ErrorType"
                }
              }
            }
          },
          "500": {
            "description": "Business logic error, detailed description in Message and Data tags",
            "content": {
              "application/json": {
                "example": {
                  "status": 500,
                  "code": -2146233088,
                  "message": "Error message",
                  "type": "ErrorType"
                }
              }
            }
          },
          "503": {
            "description": "There is no API access to the linked database or the authorization parameters of the server itself are outdated (not related to API authorization â€“ the technical account is blocked, etc.)",
            "content": {
              "application/json": {
                "example": {
                  "status": 503,
                  "code": -2146233088,
                  "message": "Error message",
                  "type": "ErrorType"
                }
              }
            }
          }
        }
      }
    },
    "/Incident/diagnoseIncident.{format}": {
      "post": {
        "tags": [
          "Incident"
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiagnoseIncidentFull"
              },
              "examples": {
                "Create DiagnoseIncident": {
                  "summary": "Create DiagnoseIncident",
                  "description": "This operation creates a DiagnoseIncident and This operation creates a DiagnoseIncident and Incident entitiesentities on base provided Category of  the This operation creates a DiagnoseIncident and Incident entities",
                  "value": {
                    "id": null,
                    "errorLog": null,
                    "incident": {
                      "id": "null",
                      "category": "software fault",
                      "incidentDetail": "router ping is not successfull",
                      "incidentResolutionSuggestion": null,
                      "rootCause": null,
                      "name": "Incident router",
                      "@type": "Incident"
                    },
                    "state": null,
                    "@type": "DiagnoseIncident"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Create DiagnoseIncident",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiagnoseIncident"
                },
                "examples": {
                  "Create DiagnoseIncident": {
                    "summary": "",
                    "description": "",
                    "value": {
                      "id": 3333,
                      "errorLog": null,
                      "incident": {
                        "id": "222",
                        "name": "Incident router",
                        "@type": "IncidentRef"
                      },
                      "state": "accepted",
                      "@type": "DiagnoseIncident"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The server cannot or will not process the request. The client should not repeat this request without modification",
            "content": {
              "application/json": {
                "example": {
                  "status": 400,
                  "code": -2146233088,
                  "message": "Error message",
                  "type": "ErrorType"
                }
              }
            }
          },
          "401": {
            "description": "The specified login/password pair is incorrect",
            "content": {
              "application/json": {
                "example": {
                  "status": 401,
                  "code": -2146233088,
                  "message": "Error message",
                  "type": "ErrorType"
                }
              }
            }
          },
          "403": {
            "description": "You do not have access to requested resource",
            "content": {
              "application/json": {
                "example": {
                  "status": 403,
                  "code": -2146233088,
                  "message": "Error message",
                  "type": "ErrorType"
                }
              }
            }
          },
          "404": {
            "description": "The request URL is incorrect",
            "content": {
              "application/json": {
                "example": {
                  "status": 404,
                  "code": -2146233088,
                  "message": "Error message",
                  "type": "ErrorType"
                }
              }
            }
          },
          "405": {
            "description": "The resource you are requesting doesn't support the request HTTP method",
            "content": {
              "application/json": {
                "example": {
                  "status": 405,
                  "code": -2146233088,
                  "message": "Error message",
                  "type": "ErrorType"
                }
              }
            }
          },
          "408": {
            "description": "You need to repeat the request immediately",
            "content": {
              "application/json": {
                "example": {
                  "status": 408,
                  "code": -2146233088,
                  "message": "Error message",
                  "type": "ErrorType"
                }
              }
            }
          },
          "409": {
            "description": "The request cannot be processed due to a conflict, for example, a parallel request conflict - is usually the result of an incorrect (too short) timeout waiting for a response or command execution. It is necessary to repeat the request after a while",
            "content": {
              "application/json": {
                "example": {
                  "status": 409,
                  "code": -2146233088,
                  "message": "Error message",
                  "type": "ErrorType"
                }
              }
            }
          },
          "500": {
            "description": "Business logic error, detailed description in Message and Data tags",
            "content": {
              "application/json": {
                "example": {
                  "status": 500,
                  "code": -2146233088,
                  "message": "Error message",
                  "type": "ErrorType"
                }
              }
            }
          },
          "503": {
            "description": "There is no API access to the linked database or the authorization parameters of the server itself are outdated (not related to API authorization â€“ the technical account is blocked, etc.)",
            "content": {
              "application/json": {
                "example": {
                  "status": 503,
                  "code": -2146233088,
                  "message": "Error message",
                  "type": "ErrorType"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "DiagnoseIncident": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique identifier",
            "nullable": true
          },
          "href": {
            "type": "string",
            "description": "Reference of the diagnose incident task",
            "nullable": true
          },
          "errorLog": {
            "type": "string",
            "description": "Reason for failure",
            "nullable": true
          },
          "incident": {
            "$ref": "#/components/schemas/IncidentRef"
          },
          "state": {
            "type": "string",
            "description": "Possible values for the state of a task",
            "nullable": true
          },
          "baseType": {
            "type": "string",
            "description": "When sub-classing, this defines the super-class",
            "nullable": true
          },
          "schemaLocation": {
            "type": "string",
            "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "When sub-classing, this defines the sub-class Extensible name",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": " A stage in the incident lifecycle. The purpose of diagnosis is to identify a workaround for an incident (ITIL Service Operation). \r\nDiagnosing Incidents by Incident SN"
      },
      "DiagnoseIncidentFull": {
        "type": "object",
        "properties": {
          "errorLog": {
            "type": "string",
            "nullable": true
          },
          "incident": {
            "$ref": "#/components/schemas/incident_Class_111"
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "baseType": {
            "type": "string",
            "nullable": true
          },
          "schemaLocation": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IncidentRef": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique identifier",
            "nullable": true
          },
          "href": {
            "type": "string",
            "description": "Hyperlink reference",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name of the related incident",
            "nullable": true
          },
          "baseType": {
            "type": "string",
            "description": "When sub-classing, this defines the super-class",
            "nullable": true
          },
          "schemaLocation": {
            "type": "string",
            "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "When sub-classing, this defines the sub-class Extensible name",
            "nullable": true
          },
          "referredType": {
            "type": "string",
            "description": "The actual type of the target instance when needed for disambiguation.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Incident reference."
      },
      "incident_Class_111": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "href": {
            "type": "string",
            "nullable": true
          },
          "ackTime": {
            "type": "string",
            "nullable": true
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "clearTime": {
            "type": "string",
            "nullable": true
          },
          "domain": {
            "type": "string",
            "nullable": true
          },
          "incidentDetail": {
            "type": "string",
            "nullable": true
          },
          "incidentResolutionSuggestion": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "occurTime": {
            "type": "string",
            "nullable": true
          },
          "updateTime": {
            "type": "string",
            "nullable": true
          },
          "ackState": {
            "type": "string",
            "nullable": true
          },
          "baseType": {
            "type": "string",
            "nullable": true
          },
          "schemaLocation": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "basicAuth": {
        "type": "http",
        "scheme": "basic"
      },
      "ApiKeyAuth": {
        "type": "apiKey",
        "name": "ApiKey",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "basicAuth": [ ],
      "ApiKeyAuth": [ ]
    }
  ],
  "tags": [
    {
      "name": "Incident",
      "description": ""
    }
  ]
}