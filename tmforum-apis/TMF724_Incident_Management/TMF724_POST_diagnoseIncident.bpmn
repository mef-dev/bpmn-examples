<?xml version="1.0" encoding="UTF-8"?>
<definitions xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:omgdc="http://www.omg.org/spec/DD/20100524/DC" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:gp="http://some-company/schema/bpmn/qa" xmlns:di="http://www.omg.org/spec/DD/20100524/DI" xmlns:ep="http://some-company/schema/bpmn/ep" targetNamespace="" xsi:schemaLocation="http://www.omg.org/spec/BPMN/20100524/MODEL http://www.omg.org/spec/BPMN/2.0/20100501/BPMN20.xsd">
  <extensionElements>
    <gp:globalParameter name="CodeActionsTypes">["Action","Function"]</gp:globalParameter>
    <gp:globalParameter name="InnerTypes">[{"name":"Addressable","definition":"/// &lt;summary&gt;\n/// Base schema for adressable entities\n/// &lt;/summary&gt;\npublic sealed class Addressable\n{\n    \n    private string _id;\n    \n    private string _href;\n    \n    /// &lt;summary&gt;\n    /// unique identifier\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"id\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string id\n    {\n        get\n        {\n            return this._id;\n        }\n        set\n        {\n            this._id = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// Hyperlink reference\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"href\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string href\n    {\n        get\n        {\n            return this._href;\n        }\n        set\n        {\n            this._href = value;\n        }\n    }\n}\n","isNativeDefinition":true},{"name":"Any","definition":"/// &lt;summary&gt;\n/// \n/// &lt;/summary&gt;\npublic sealed class Any\n{\n}\n","isNativeDefinition":true},{"name":"Characteristic","definition":"/// &lt;summary&gt;\n/// Describes a given characteristic of an object or entity through a name/value pair.\n/// &lt;/summary&gt;\npublic sealed class Characteristic\n{\n    \n    private string _id;\n    \n    private string _name;\n    \n    private string _valueType;\n    \n    private CharacteristicRelationship[] _characteristicRelationship;\n    \n    private Any _value;\n    \n    private string _baseType;\n    \n    private string _schemaLocation;\n    \n    private string _type;\n    \n    /// &lt;summary&gt;\n    /// Unique identifier of the characteristic\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"id\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string id\n    {\n        get\n        {\n            return this._id;\n        }\n        set\n        {\n            this._id = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// Name of the characteristic\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"name\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string name\n    {\n        get\n        {\n            return this._name;\n        }\n        set\n        {\n            this._name = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// Data type of the value of the characteristic\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"valueType\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string valueType\n    {\n        get\n        {\n            return this._valueType;\n        }\n        set\n        {\n            this._valueType = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// \n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"characteristicRelationship\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public CharacteristicRelationship[] characteristicRelationship\n    {\n        get\n        {\n            return this._characteristicRelationship;\n        }\n        set\n        {\n            this._characteristicRelationship = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// \n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"value\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public Any value\n    {\n        get\n        {\n            return this._value;\n        }\n        set\n        {\n            this._value = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// When sub-classing, this defines the super-class\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"@baseType\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string @baseType\n    {\n        get\n        {\n            return this._baseType;\n        }\n        set\n        {\n            this._baseType = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// A URI to a JSON-Schema file that defines additional attributes and relationships\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"@schemaLocation\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string @schemaLocation\n    {\n        get\n        {\n            return this._schemaLocation;\n        }\n        set\n        {\n            this._schemaLocation = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// When sub-classing, this defines the sub-class Extensible name\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"@type\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string @type\n    {\n        get\n        {\n            return this._type;\n        }\n        set\n        {\n            this._type = value;\n        }\n    }\n}\n","isNativeDefinition":true},{"name":"CharacteristicRelationship","definition":"/// &lt;summary&gt;\n/// Another Characteristic that is related to the current Characteristic.\n/// &lt;/summary&gt;\npublic sealed class CharacteristicRelationship\n{\n    \n    private string _id;\n    \n    private string _href;\n    \n    private string _relationshipType;\n    \n    private string _baseType;\n    \n    private string _schemaLocation;\n    \n    private string _type;\n    \n    /// &lt;summary&gt;\n    /// Unique identifier of the characteristic\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"id\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string id\n    {\n        get\n        {\n            return this._id;\n        }\n        set\n        {\n            this._id = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// Hyperlink reference\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"href\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string href\n    {\n        get\n        {\n            return this._href;\n        }\n        set\n        {\n            this._href = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// The type of relationship\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"relationshipType\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string relationshipType\n    {\n        get\n        {\n            return this._relationshipType;\n        }\n        set\n        {\n            this._relationshipType = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// When sub-classing, this defines the super-class\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"@baseType\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string @baseType\n    {\n        get\n        {\n            return this._baseType;\n        }\n        set\n        {\n            this._baseType = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// A URI to a JSON-Schema file that defines additional attributes and relationships\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"@schemaLocation\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string @schemaLocation\n    {\n        get\n        {\n            return this._schemaLocation;\n        }\n        set\n        {\n            this._schemaLocation = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// When sub-classing, this defines the sub-class Extensible name\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"@type\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string @type\n    {\n        get\n        {\n            return this._type;\n        }\n        set\n        {\n            this._type = value;\n        }\n    }\n}\n","isNativeDefinition":true},{"name":"DiagnoseIncident","definition":"/// &lt;summary&gt;\n/// A stage in the incident lifecycle. The purpose of diagnosis is to identify a workaround for an incident (ITIL Service Operation). \n///Diagnosing Incidents by Incident SN\n/// &lt;/summary&gt;\npublic sealed class DiagnoseIncident\n{\n    \n    private string _id;\n    \n    private string _href;\n    \n    private string _errorLog;\n    \n    private IncidentRef _incident;\n    \n    private string _state;\n    \n    private string _baseType;\n    \n    private string _schemaLocation;\n    \n    private string _type;\n    \n    /// &lt;summary&gt;\n    /// unique identifier\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"id\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string id\n    {\n        get\n        {\n            return this._id;\n        }\n        set\n        {\n            this._id = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// Reference of the diagnose incident task\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"href\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string href\n    {\n        get\n        {\n            return this._href;\n        }\n        set\n        {\n            this._href = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// Reason for failure\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"errorLog\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string errorLog\n    {\n        get\n        {\n            return this._errorLog;\n        }\n        set\n        {\n            this._errorLog = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// Incident reference.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"incident\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public IncidentRef incident\n    {\n        get\n        {\n            return this._incident;\n        }\n        set\n        {\n            this._incident = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// Possible values for the state of a task\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"state\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string state\n    {\n        get\n        {\n            return this._state;\n        }\n        set\n        {\n            this._state = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// When sub-classing, this defines the super-class\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"@baseType\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string @baseType\n    {\n        get\n        {\n            return this._baseType;\n        }\n        set\n        {\n            this._baseType = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// A URI to a JSON-Schema file that defines additional attributes and relationships\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"@schemaLocation\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string @schemaLocation\n    {\n        get\n        {\n            return this._schemaLocation;\n        }\n        set\n        {\n            this._schemaLocation = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// When sub-classing, this defines the sub-class Extensible name\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"@type\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string @type\n    {\n        get\n        {\n            return this._type;\n        }\n        set\n        {\n            this._type = value;\n        }\n    }\n}\n","isNativeDefinition":true},{"name":"DiagnoseIncident_Create","definition":"/// &lt;summary&gt;\n/// A stage in the incident lifecycle. The purpose of diagnosis is to identify a workaround for an incident (ITIL Service Operation). \n///Diagnosing Incidents by Incident SN\n///Skipped properties: id,href\n/// &lt;/summary&gt;\npublic sealed class DiagnoseIncident_Create\n{\n    \n    private string _errorLog;\n    \n    private IncidentRef _incident;\n    \n    private string _state;\n    \n    private string _baseType;\n    \n    private string _schemaLocation;\n    \n    private string _type;\n    \n    /// &lt;summary&gt;\n    /// Reason for failure\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"errorLog\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string errorLog\n    {\n        get\n        {\n            return this._errorLog;\n        }\n        set\n        {\n            this._errorLog = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// Incident reference.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"incident\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public IncidentRef incident\n    {\n        get\n        {\n            return this._incident;\n        }\n        set\n        {\n            this._incident = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// Possible values for the state of a task\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"state\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string state\n    {\n        get\n        {\n            return this._state;\n        }\n        set\n        {\n            this._state = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// When sub-classing, this defines the super-class\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"@baseType\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string @baseType\n    {\n        get\n        {\n            return this._baseType;\n        }\n        set\n        {\n            this._baseType = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// A URI to a JSON-Schema file that defines additional attributes and relationships\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"@schemaLocation\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string @schemaLocation\n    {\n        get\n        {\n            return this._schemaLocation;\n        }\n        set\n        {\n            this._schemaLocation = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// When sub-classing, this defines the sub-class Extensible name\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"@type\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string @type\n    {\n        get\n        {\n            return this._type;\n        }\n        set\n        {\n            this._type = value;\n        }\n    }\n}\n","isNativeDefinition":true},{"name":"DiagnoseIncidentCreateEvent","definition":"/// &lt;summary&gt;\n/// The notification data structure\n/// &lt;/summary&gt;\npublic sealed class DiagnoseIncidentCreateEvent\n{\n    \n    private DiagnoseIncidentCreateEventPayload _event;\n    \n    private string _eventId;\n    \n    private System.DateTime? _eventTime;\n    \n    private string _eventType;\n    \n    private string _correlationId;\n    \n    private string _domain;\n    \n    private string _title;\n    \n    private string _description;\n    \n    private string _priority;\n    \n    private System.DateTime? _timeOcurred;\n    \n    /// &lt;summary&gt;\n    /// The event data structure\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"event\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public DiagnoseIncidentCreateEventPayload @event\n    {\n        get\n        {\n            return this._event;\n        }\n        set\n        {\n            this._event = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// The identifier of the notification.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"eventId\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string eventId\n    {\n        get\n        {\n            return this._eventId;\n        }\n        set\n        {\n            this._eventId = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// Time of the event occurrence.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"eventTime\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public System.DateTime? eventTime\n    {\n        get\n        {\n            return this._eventTime;\n        }\n        set\n        {\n            this._eventTime = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// The type of the notification.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"eventType\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string eventType\n    {\n        get\n        {\n            return this._eventType;\n        }\n        set\n        {\n            this._eventType = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// The correlation id for this event.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"correlationId\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string correlationId\n    {\n        get\n        {\n            return this._correlationId;\n        }\n        set\n        {\n            this._correlationId = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// The domain of the event.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"domain\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string domain\n    {\n        get\n        {\n            return this._domain;\n        }\n        set\n        {\n            this._domain = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// The title of the event.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"title\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string title\n    {\n        get\n        {\n            return this._title;\n        }\n        set\n        {\n            this._title = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// An explnatory of the event.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"description\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string description\n    {\n        get\n        {\n            return this._description;\n        }\n        set\n        {\n            this._description = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// A priority.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"priority\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string priority\n    {\n        get\n        {\n            return this._priority;\n        }\n        set\n        {\n            this._priority = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// The time the event occured.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"timeOcurred\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public System.DateTime? timeOcurred\n    {\n        get\n        {\n            return this._timeOcurred;\n        }\n        set\n        {\n            this._timeOcurred = value;\n        }\n    }\n}\n","isNativeDefinition":true},{"name":"DiagnoseIncidentCreateEventPayload","definition":"/// &lt;summary&gt;\n/// The event data structure\n/// &lt;/summary&gt;\npublic sealed class DiagnoseIncidentCreateEventPayload\n{\n    \n    private DiagnoseIncident _diagnoseIncident;\n    \n    /// &lt;summary&gt;\n    /// A stage in the incident lifecycle. The purpose of diagnosis is to identify a workaround for an incident (ITIL Service Operation). \n    ///Diagnosing Incidents by Incident SN\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"diagnoseIncident\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public DiagnoseIncident diagnoseIncident\n    {\n        get\n        {\n            return this._diagnoseIncident;\n        }\n        set\n        {\n            this._diagnoseIncident = value;\n        }\n    }\n}\n","isNativeDefinition":true},{"name":"DiagnoseIncidentStateChangeEvent","definition":"/// &lt;summary&gt;\n/// The notification data structure\n/// &lt;/summary&gt;\npublic sealed class DiagnoseIncidentStateChangeEvent\n{\n    \n    private DiagnoseIncidentStateChangeEventPayload _event;\n    \n    private string _eventId;\n    \n    private System.DateTime? _eventTime;\n    \n    private string _eventType;\n    \n    private string _correlationId;\n    \n    private string _domain;\n    \n    private string _title;\n    \n    private string _description;\n    \n    private string _priority;\n    \n    private System.DateTime? _timeOcurred;\n    \n    /// &lt;summary&gt;\n    /// The event data structure\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"event\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public DiagnoseIncidentStateChangeEventPayload @event\n    {\n        get\n        {\n            return this._event;\n        }\n        set\n        {\n            this._event = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// The identifier of the notification.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"eventId\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string eventId\n    {\n        get\n        {\n            return this._eventId;\n        }\n        set\n        {\n            this._eventId = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// Time of the event occurrence.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"eventTime\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public System.DateTime? eventTime\n    {\n        get\n        {\n            return this._eventTime;\n        }\n        set\n        {\n            this._eventTime = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// The type of the notification.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"eventType\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string eventType\n    {\n        get\n        {\n            return this._eventType;\n        }\n        set\n        {\n            this._eventType = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// The correlation id for this event.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"correlationId\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string correlationId\n    {\n        get\n        {\n            return this._correlationId;\n        }\n        set\n        {\n            this._correlationId = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// The domain of the event.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"domain\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string domain\n    {\n        get\n        {\n            return this._domain;\n        }\n        set\n        {\n            this._domain = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// The title of the event.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"title\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string title\n    {\n        get\n        {\n            return this._title;\n        }\n        set\n        {\n            this._title = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// An explnatory of the event.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"description\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string description\n    {\n        get\n        {\n            return this._description;\n        }\n        set\n        {\n            this._description = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// A priority.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"priority\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string priority\n    {\n        get\n        {\n            return this._priority;\n        }\n        set\n        {\n            this._priority = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// The time the event occured.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"timeOcurred\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public System.DateTime? timeOcurred\n    {\n        get\n        {\n            return this._timeOcurred;\n        }\n        set\n        {\n            this._timeOcurred = value;\n        }\n    }\n}\n","isNativeDefinition":true},{"name":"DiagnoseIncidentStateChangeEventPayload","definition":"/// &lt;summary&gt;\n/// The event data structure\n/// &lt;/summary&gt;\npublic sealed class DiagnoseIncidentStateChangeEventPayload\n{\n    \n    private DiagnoseIncident _diagnoseIncident;\n    \n    /// &lt;summary&gt;\n    /// A stage in the incident lifecycle. The purpose of diagnosis is to identify a workaround for an incident (ITIL Service Operation). \n    ///Diagnosing Incidents by Incident SN\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"diagnoseIncident\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public DiagnoseIncident diagnoseIncident\n    {\n        get\n        {\n            return this._diagnoseIncident;\n        }\n        set\n        {\n            this._diagnoseIncident = value;\n        }\n    }\n}\n","isNativeDefinition":true},{"name":"Entity","definition":"/// &lt;summary&gt;\n/// Base entity schema for use in TMForum Open-APIs\n/// &lt;/summary&gt;\npublic sealed class Entity\n{\n    \n    private string _id;\n    \n    private string _href;\n    \n    private string _baseType;\n    \n    private string _schemaLocation;\n    \n    private string _type;\n    \n    /// &lt;summary&gt;\n    /// unique identifier\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"id\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string id\n    {\n        get\n        {\n            return this._id;\n        }\n        set\n        {\n            this._id = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// Hyperlink reference\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"href\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string href\n    {\n        get\n        {\n            return this._href;\n        }\n        set\n        {\n            this._href = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// When sub-classing, this defines the super-class\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"@baseType\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string @baseType\n    {\n        get\n        {\n            return this._baseType;\n        }\n        set\n        {\n            this._baseType = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// A URI to a JSON-Schema file that defines additional attributes and relationships\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"@schemaLocation\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string @schemaLocation\n    {\n        get\n        {\n            return this._schemaLocation;\n        }\n        set\n        {\n            this._schemaLocation = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// When sub-classing, this defines the sub-class Extensible name\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"@type\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string @type\n    {\n        get\n        {\n            return this._type;\n        }\n        set\n        {\n            this._type = value;\n        }\n    }\n}\n","isNativeDefinition":true},{"name":"EntityRef","definition":"/// &lt;summary&gt;\n/// Entity reference schema to be use for all entityRef class.\n/// &lt;/summary&gt;\npublic sealed class EntityRef\n{\n    \n    private string _id;\n    \n    private string _href;\n    \n    private string _name;\n    \n    private string _baseType;\n    \n    private string _schemaLocation;\n    \n    private string _type;\n    \n    private string _referredType;\n    \n    /// &lt;summary&gt;\n    /// unique identifier\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"id\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string id\n    {\n        get\n        {\n            return this._id;\n        }\n        set\n        {\n            this._id = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// Hyperlink reference\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"href\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string href\n    {\n        get\n        {\n            return this._href;\n        }\n        set\n        {\n            this._href = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// Name of the related entity.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"name\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string name\n    {\n        get\n        {\n            return this._name;\n        }\n        set\n        {\n            this._name = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// When sub-classing, this defines the super-class\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"@baseType\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string @baseType\n    {\n        get\n        {\n            return this._baseType;\n        }\n        set\n        {\n            this._baseType = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// A URI to a JSON-Schema file that defines additional attributes and relationships\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"@schemaLocation\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string @schemaLocation\n    {\n        get\n        {\n            return this._schemaLocation;\n        }\n        set\n        {\n            this._schemaLocation = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// When sub-classing, this defines the sub-class Extensible name\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"@type\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string @type\n    {\n        get\n        {\n            return this._type;\n        }\n        set\n        {\n            this._type = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// The actual type of the target instance when needed for disambiguation.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"@referredType\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string @referredType\n    {\n        get\n        {\n            return this._referredType;\n        }\n        set\n        {\n            this._referredType = value;\n        }\n    }\n}\n","isNativeDefinition":true},{"name":"Error","definition":"/// &lt;summary&gt;\n/// Used when an API throws an Error, typically with a HTTP error response-code (3xx, 4xx, 5xx)\n/// &lt;/summary&gt;\npublic sealed class Error\n{\n    \n    private string _code;\n    \n    private string _reason;\n    \n    private string _message;\n    \n    private string _status;\n    \n    private string _referenceError;\n    \n    private string _baseType;\n    \n    private string _schemaLocation;\n    \n    private string _type;\n    \n    /// &lt;summary&gt;\n    /// Application relevant detail, defined in the API or a common list.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"code\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string code\n    {\n        get\n        {\n            return this._code;\n        }\n        set\n        {\n            this._code = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// Explanation of the reason for the error which can be shown to a client user.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"reason\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string reason\n    {\n        get\n        {\n            return this._reason;\n        }\n        set\n        {\n            this._reason = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// More details and corrective actions related to the error which can be shown to a client user.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"message\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string message\n    {\n        get\n        {\n            return this._message;\n        }\n        set\n        {\n            this._message = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// HTTP Error code extension\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"status\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string status\n    {\n        get\n        {\n            return this._status;\n        }\n        set\n        {\n            this._status = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// URI of documentation describing the error.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"referenceError\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string referenceError\n    {\n        get\n        {\n            return this._referenceError;\n        }\n        set\n        {\n            this._referenceError = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// When sub-classing, this defines the super-class.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"@baseType\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string @baseType\n    {\n        get\n        {\n            return this._baseType;\n        }\n        set\n        {\n            this._baseType = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// A URI to a JSON-Schema file that defines additional attributes and relationships\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"@schemaLocation\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string @schemaLocation\n    {\n        get\n        {\n            return this._schemaLocation;\n        }\n        set\n        {\n            this._schemaLocation = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// When sub-classing, this defines the sub-class entity name.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"@type\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string @type\n    {\n        get\n        {\n            return this._type;\n        }\n        set\n        {\n            this._type = value;\n        }\n    }\n}\n","isNativeDefinition":true},{"name":"ErrorResponse","definition":"{\r\n  \"$schema\": \"http://json-schema.org/draft-06/schema#\",\r\n  \"$ref\": \"#/definitions/ErrorResponse\",\r\n  \"definitions\": {\r\n    \"ErrorResponse\": {\r\n      \"type\": \"object\",\r\n      \"additionalProperties\": true,\r\n      \"properties\": {\r\n        \"LevelMessage\": {\r\n          \"title\": \"The Error level\",\r\n          \"type\": \"string\"\r\n        },\r\n        \"statusCode\": {\r\n          \"title\": \"The Error Status Code\",\r\n          \"type\": \"integer\"\r\n        },\r\n        \"ErrNumber\": {\r\n          \"title\": \"The Error Number\",\r\n          \"type\": \"string\"\r\n        },\r\n        \"Message\": {\r\n          \"title\": \"The Error Message\",\r\n          \"type\": \"string\"\r\n        },\r\n        \"State\": {\r\n          \"title\": \"The Error State\",\r\n          \"type\": \"string\"\r\n        },\r\n        \"HelpLink\": {\r\n          \"title\": \"The Help Link\",\r\n          \"type\": \"string\"\r\n        },\r\n        \"errNumberReason\": {\r\n          \"title\": \"The initial Error Number\",\r\n          \"type\": \"string\"\r\n        },\r\n        \"Data\": {\r\n          \"title\": \"The Error Data\",\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"LevelMessage\": {\r\n              \"title\": \"The Error level\",\r\n              \"type\": \"string\"\r\n            },\r\n            \"statusCode\": {\r\n              \"title\": \"The Error Status Code\",\r\n              \"type\": \"integer\"\r\n            },\r\n            \"ErrNumber\": {\r\n              \"title\": \"The Error Number\",\r\n              \"type\": \"string\"\r\n            },\r\n            \"Message\": {\r\n              \"title\": \"The Error Message\",\r\n              \"type\": \"string\"\r\n            },\r\n            \"State\": {\r\n              \"title\": \"The Error State\",\r\n              \"type\": \"string\"\r\n            },\r\n            \"HelpLink\": {\r\n              \"title\": \"The Help Link\",\r\n              \"type\": \"string\"\r\n            },\r\n            \"errNumberReason\": {\r\n              \"title\": \"The initial Error Number\",\r\n              \"type\": \"string\"\r\n            },\r\n            \"Data\": {\r\n              \"title\": \"The Data Schema\",\r\n              \"type\": \"object\",\r\n              \"properties\": {\r\n                \"LevelMessage\": {\r\n                  \"title\": \"The Error level\",\r\n                  \"type\": \"string\"\r\n                },\r\n                \"statusCode\": {\r\n                  \"title\": \"The Error Status Code\",\r\n                  \"type\": \"integer\"\r\n                },\r\n                \"ErrNumber\": {\r\n                  \"title\": \"The Error Number\",\r\n                  \"type\": \"string\"\r\n                },\r\n                \"Message\": {\r\n                  \"title\": \"The Error Message\",\r\n                  \"type\": \"string\"\r\n                },\r\n                \"State\": {\r\n                  \"title\": \"The Error State\",\r\n                  \"type\": \"string\"\r\n                },\r\n                \"HelpLink\": {\r\n                  \"title\": \"The Help Link\",\r\n                  \"type\": \"string\"\r\n                },\r\n                \"errNumberReason\": {\r\n                  \"title\": \"The initial Error Number\",\r\n                  \"type\": \"string\"\r\n                }\r\n              }\r\n            },\r\n            \"ResolveUrl\": {\r\n              \"title\": \"The Resolve Url Link\",\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        },\r\n        \"ResolveUrl\": {\r\n          \"title\": \"The Resolve Url Link\",\r\n          \"type\": \"string\"\r\n        },\r\n        \"extraData\": {\r\n          \"title\": \"The Error Extra Data \",\r\n          \"type\": \"object\",\r\n          \"properties\": {\r\n            \"operationDuration\": {\r\n              \"title\": \"The Operation Duration\",\r\n              \"type\": \"integer\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"title\": \"ErrorResponse\"\r\n    }\r\n  }\r\n}","isNativeDefinition":false},{"name":"EventSubscription","definition":"/// &lt;summary&gt;\n/// Sets the communication endpoint address the service instance must use to deliver notification information\n/// &lt;/summary&gt;\npublic sealed class EventSubscription\n{\n    \n    private string _id;\n    \n    private string _callback;\n    \n    private string _query;\n    \n    /// &lt;summary&gt;\n    /// Id of the listener\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"id\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string id\n    {\n        get\n        {\n            return this._id;\n        }\n        set\n        {\n            this._id = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// The callback being registered.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"callback\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string callback\n    {\n        get\n        {\n            return this._callback;\n        }\n        set\n        {\n            this._callback = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// additional data to be passed\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"query\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string query\n    {\n        get\n        {\n            return this._query;\n        }\n        set\n        {\n            this._query = value;\n        }\n    }\n}\n","isNativeDefinition":true},{"name":"EventSubscriptionInput","definition":"/// &lt;summary&gt;\n/// Sets the communication endpoint address the service instance must use to deliver notification information\n/// &lt;/summary&gt;\npublic sealed class EventSubscriptionInput\n{\n    \n    private string _callback;\n    \n    private string _query;\n    \n    /// &lt;summary&gt;\n    /// The callback being registered.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"callback\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string callback\n    {\n        get\n        {\n            return this._callback;\n        }\n        set\n        {\n            this._callback = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// additional data to be passed\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"query\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string query\n    {\n        get\n        {\n            return this._query;\n        }\n        set\n        {\n            this._query = value;\n        }\n    }\n}\n","isNativeDefinition":true},{"name":"Extensible","definition":"/// &lt;summary&gt;\n/// Base Extensible schema for use in TMForum Open-APIs\n/// &lt;/summary&gt;\npublic sealed class Extensible\n{\n    \n    private string _baseType;\n    \n    private string _schemaLocation;\n    \n    private string _type;\n    \n    /// &lt;summary&gt;\n    /// When sub-classing, this defines the super-class\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"@baseType\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string @baseType\n    {\n        get\n        {\n            return this._baseType;\n        }\n        set\n        {\n            this._baseType = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// A URI to a JSON-Schema file that defines additional attributes and relationships\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"@schemaLocation\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string @schemaLocation\n    {\n        get\n        {\n            return this._schemaLocation;\n        }\n        set\n        {\n            this._schemaLocation = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// When sub-classing, this defines the sub-class Extensible name\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"@type\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string @type\n    {\n        get\n        {\n            return this._type;\n        }\n        set\n        {\n            this._type = value;\n        }\n    }\n}\n","isNativeDefinition":true},{"name":"ExternalIdentifier","definition":"/// &lt;summary&gt;\n/// An identification of an entity that is owned by or originates in a software system different from the current system, for example a ProductOrder handed off from a commerce platform into an order handling system. The structure identifies the system itself, the nature of the entity within the system (e.g. class name) and the unique ID of the entity within the system. It is anticipated that multiple external IDs can be held for a single entity, e.g. if the entity passed through multiple systems on the way to the current system. In this case the consumer is expected to sequence the IDs in the array in reverse order of provenance, i.e. most recent system first in the list.\n/// &lt;/summary&gt;\npublic sealed class ExternalIdentifier\n{\n    \n    private string _id;\n    \n    private string _href;\n    \n    private string _externalIdentifierType;\n    \n    private string _owner;\n    \n    private string _baseType;\n    \n    private string _schemaLocation;\n    \n    private string _type;\n    \n    /// &lt;summary&gt;\n    /// identification of the entity within the external system.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"id\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string id\n    {\n        get\n        {\n            return this._id;\n        }\n        set\n        {\n            this._id = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// Hyperlink reference\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"href\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string href\n    {\n        get\n        {\n            return this._href;\n        }\n        set\n        {\n            this._href = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// Type of the identification, typically would be the type of the entity within the external system\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"externalIdentifierType\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string externalIdentifierType\n    {\n        get\n        {\n            return this._externalIdentifierType;\n        }\n        set\n        {\n            this._externalIdentifierType = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// Name of the external system that owns the entity.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"owner\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string owner\n    {\n        get\n        {\n            return this._owner;\n        }\n        set\n        {\n            this._owner = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// When sub-classing, this defines the super-class\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"@baseType\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string @baseType\n    {\n        get\n        {\n            return this._baseType;\n        }\n        set\n        {\n            this._baseType = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// A URI to a JSON-Schema file that defines additional attributes and relationships\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"@schemaLocation\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string @schemaLocation\n    {\n        get\n        {\n            return this._schemaLocation;\n        }\n        set\n        {\n            this._schemaLocation = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// When sub-classing, this defines the sub-class Extensible name\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"@type\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string @type\n    {\n        get\n        {\n            return this._type;\n        }\n        set\n        {\n            this._type = value;\n        }\n    }\n}\n","isNativeDefinition":true},{"name":"HttpConfig","definition":"{\r\n    \"$schema\":\"http://natec.tech/simpleschema\",\r\n    \"$ref\":\"#/definitions/HttpConfig\",\r\n    \"definitions\":{\r\n        \"HttpConfig\":{\r\n            \"type\":\"object\",\r\n            \"properties\":{\r\n                \"host\":{\r\n                    \"type\":\"string\"\r\n                },\r\n                \"port\":{\r\n                    \"type\":\"string\"\r\n                },\r\n                \"login\":{\r\n                    \"type\":\"string\"\r\n                },\r\n                \"password\":{\r\n                    \"type\":\"string\"\r\n                },\r\n                \"encoding\":{\r\n                    \"type\":\"string\"\r\n                },\r\n                \"headers\":{\r\n                    \"type\":\"StringDictionary&lt;string, string&gt;\"\r\n                }\r\n            },\r\n            \"required\": [\"host\", \"encoding\", \"headers\"],\r\n            \"title\":\"HttpConfig\"\r\n        }\r\n    }\r\n}","isNativeDefinition":false},{"name":"ImpactType","definition":"/// &lt;summary&gt;\n/// Possible values for the impact of an Incident\n/// &lt;/summary&gt;\npublic sealed class ImpactType\n{\n}\n","isNativeDefinition":true},{"name":"Incident","definition":"/// &lt;summary&gt;\n/// An Incident is a record of an event that has altered the operational state of a entity (Resource, Service or Customers Product). An incident represents an issue that needs to be diagnosed and resolved.\n/// &lt;/summary&gt;\npublic sealed class Incident\n{\n    \n    private string _id;\n    \n    private string _href;\n    \n    private System.DateTime? _ackTime;\n    \n    private string _category;\n    \n    private System.DateTime? _clearTime;\n    \n    private string _domain;\n    \n    private string _incidentDetail;\n    \n    private string _incidentResolutionSuggestion;\n    \n    private string _name;\n    \n    private System.DateTime? _occurTime;\n    \n    private string _updateTime;\n    \n    private string _ackState;\n    \n    private EntityRef[] _affectedEntity;\n    \n    private ResourceEntity[] _eventId;\n    \n    private Characteristic[] _extensionInfo;\n    \n    private ExternalIdentifier[] _externalIdentifier;\n    \n    private string _impact;\n    \n    private string _priority;\n    \n    private RootCause[] _rootCause;\n    \n    private ResourceEntity[] _rootEventId;\n    \n    private ResourceEntity[] _sourceObject;\n    \n    private string _state;\n    \n    private string _urgency;\n    \n    private string _baseType;\n    \n    private string _schemaLocation;\n    \n    private string _type;\n    \n    /// &lt;summary&gt;\n    /// unique identifier\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"id\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string id\n    {\n        get\n        {\n            return this._id;\n        }\n        set\n        {\n            this._id = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// Hyperlink, a reference to the incident entity\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"href\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string href\n    {\n        get\n        {\n            return this._href;\n        }\n        set\n        {\n            this._href = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// The ackTime or acknowledgeTime of the incident. An acknowledged incident is being worked on, but is not yet resolved\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"ackTime\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public System.DateTime? ackTime\n    {\n        get\n        {\n            return this._ackTime;\n        }\n        set\n        {\n            this._ackTime = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// The category of the incident  (category is the term used by ITU) \n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"category\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string category\n    {\n        get\n        {\n            return this._category;\n        }\n        set\n        {\n            this._category = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// The clear time of the incident\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"clearTime\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public System.DateTime? clearTime\n    {\n        get\n        {\n            return this._clearTime;\n        }\n        set\n        {\n            this._clearTime = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// The domain of the incident, for example RAN, PON, OTN, Cross-Domain etc\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"domain\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string domain\n    {\n        get\n        {\n            return this._domain;\n        }\n        set\n        {\n            this._domain = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// A textual succinct description of the nature, symptoms, cause, or effect of the incident.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"incidentDetail\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string incidentDetail\n    {\n        get\n        {\n            return this._incidentDetail;\n        }\n        set\n        {\n            this._incidentDetail = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// Incident resolution suggestion or tip to resolve the incident\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"incidentResolutionSuggestion\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string incidentResolutionSuggestion\n    {\n        get\n        {\n            return this._incidentResolutionSuggestion;\n        }\n        set\n        {\n            this._incidentResolutionSuggestion = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// The name of the incident. A short-form string that provides succinct, important information about the incident\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"name\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string name\n    {\n        get\n        {\n            return this._name;\n        }\n        set\n        {\n            this._name = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// Indicates the time (as a date + time) at which the incident occurred at its source\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"occurTime\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public System.DateTime? occurTime\n    {\n        get\n        {\n            return this._occurTime;\n        }\n        set\n        {\n            this._occurTime = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// The last update time  of the incident\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"updateTime\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string updateTime\n    {\n        get\n        {\n            return this._updateTime;\n        }\n        set\n        {\n            this._updateTime = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// Possible values for the ack state of an Incident\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"ackState\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string ackState\n    {\n        get\n        {\n            return this._ackState;\n        }\n        set\n        {\n            this._ackState = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// List of affected entities \n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"affectedEntity\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public EntityRef[] affectedEntity\n    {\n        get\n        {\n            return this._affectedEntity;\n        }\n        set\n        {\n            this._affectedEntity = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// The correlation event object such as alarm, externalAlarm, performance, etc.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"eventId\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public ResourceEntity[] eventId\n    {\n        get\n        {\n            return this._eventId;\n        }\n        set\n        {\n            this._eventId = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// This is used for extend the incident with attributes\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"extensionInfo\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public Characteristic[] extensionInfo\n    {\n        get\n        {\n            return this._extensionInfo;\n        }\n        set\n        {\n            this._extensionInfo = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// An identification of an entity that is owned by or originates in a software system different from the current system, for example a ProductOrder handed off from a commerce platform into an order handling system. The structure identifies the system itself, the nature of the entity within the system (e.g. class name) and the unique ID of the entity within the system. It is anticipated that multiple external IDs can be held for a single entity, e.g. if the entity passed through multiple systems on the way to the current system. In this case the consumer is expected to sequence the IDs in the array in reverse order of provenance, i.e. most recent system first in the list.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"externalIdentifier\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public ExternalIdentifier[] externalIdentifier\n    {\n        get\n        {\n            return this._externalIdentifier;\n        }\n        set\n        {\n            this._externalIdentifier = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// Possible values for the impact of an Incident\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"impact\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string impact\n    {\n        get\n        {\n            return this._impact;\n        }\n        set\n        {\n            this._impact = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// Possible values for the Priority of an Incident\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"priority\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string priority\n    {\n        get\n        {\n            return this._priority;\n        }\n        set\n        {\n            this._priority = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// A root cause is a fundamental or underlying reason behind why an incident occurred that identifies one or more failures. An incident many have multiple rootCauses\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"rootCause\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public RootCause[] rootCause\n    {\n        get\n        {\n            return this._rootCause;\n        }\n        set\n        {\n            this._rootCause = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// The root event object such as alarm, externalAlarm, performance, etc.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"rootEventId\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public ResourceEntity[] rootEventId\n    {\n        get\n        {\n            return this._rootEventId;\n        }\n        set\n        {\n            this._rootEventId = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// The objects show the incident, it may be part of Network Equipment. Fault object, which may be an NE or a port.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"sourceObject\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public ResourceEntity[] sourceObject\n    {\n        get\n        {\n            return this._sourceObject;\n        }\n        set\n        {\n            this._sourceObject = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// Possible values for the state of an Incident\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"state\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string state\n    {\n        get\n        {\n            return this._state;\n        }\n        set\n        {\n            this._state = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// Possible values for the urgency of an Incident\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"urgency\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string urgency\n    {\n        get\n        {\n            return this._urgency;\n        }\n        set\n        {\n            this._urgency = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// When sub-classing, this defines the super-class\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"@baseType\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string @baseType\n    {\n        get\n        {\n            return this._baseType;\n        }\n        set\n        {\n            this._baseType = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// A URI to a JSON-Schema file that defines additional attributes and relationships\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"@schemaLocation\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string @schemaLocation\n    {\n        get\n        {\n            return this._schemaLocation;\n        }\n        set\n        {\n            this._schemaLocation = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// When sub-classing, this defines the sub-class Extensible name\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"@type\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string @type\n    {\n        get\n        {\n            return this._type;\n        }\n        set\n        {\n            this._type = value;\n        }\n    }\n}\n","isNativeDefinition":true},{"name":"Incident_Create","definition":"/// &lt;summary&gt;\n/// An Incident is a record of an event that has altered the operational state of a entity (Resource, Service or Customers Product). An incident represents an issue that needs to be diagnosed and resolved.\n///Skipped properties: id,href,lifecycleStatus,creationDate,statusChangeDate\n/// &lt;/summary&gt;\npublic sealed class Incident_Create\n{\n    \n    private System.DateTime? _ackTime;\n    \n    private string _category;\n    \n    private System.DateTime? _clearTime;\n    \n    private string _domain;\n    \n    private string _incidentDetail;\n    \n    private string _incidentResolutionSuggestion;\n    \n    private string _name;\n    \n    private System.DateTime? _occurTime;\n    \n    private string _updateTime;\n    \n    private string _ackState;\n    \n    private EntityRef[] _affectedEntity;\n    \n    private ResourceEntity[] _eventId;\n    \n    private Characteristic[] _extensionInfo;\n    \n    private ExternalIdentifier[] _externalIdentifier;\n    \n    private string _impact;\n    \n    private string _priority;\n    \n    private RootCause[] _rootCause;\n    \n    private ResourceEntity[] _rootEventId;\n    \n    private ResourceEntity[] _sourceObject;\n    \n    private string _state;\n    \n    private string _urgency;\n    \n    private string _baseType;\n    \n    private string _schemaLocation;\n    \n    private string _type;\n    \n    /// &lt;summary&gt;\n    /// The ackTime or acknowledgeTime of the incident. An acknowledged incident is being worked on, but is not yet resolved\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"ackTime\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public System.DateTime? ackTime\n    {\n        get\n        {\n            return this._ackTime;\n        }\n        set\n        {\n            this._ackTime = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// The category of the incident  (category is the term used by ITU) \n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"category\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string category\n    {\n        get\n        {\n            return this._category;\n        }\n        set\n        {\n            this._category = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// The clear time of the incident\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"clearTime\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public System.DateTime? clearTime\n    {\n        get\n        {\n            return this._clearTime;\n        }\n        set\n        {\n            this._clearTime = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// The domain of the incident, for example RAN, PON, OTN, Cross-Domain etc\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"domain\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string domain\n    {\n        get\n        {\n            return this._domain;\n        }\n        set\n        {\n            this._domain = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// A textual succinct description of the nature, symptoms, cause, or effect of the incident.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"incidentDetail\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string incidentDetail\n    {\n        get\n        {\n            return this._incidentDetail;\n        }\n        set\n        {\n            this._incidentDetail = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// Incident resolution suggestion or tip to resolve the incident\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"incidentResolutionSuggestion\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string incidentResolutionSuggestion\n    {\n        get\n        {\n            return this._incidentResolutionSuggestion;\n        }\n        set\n        {\n            this._incidentResolutionSuggestion = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// The name of the incident. A short-form string that provides succinct, important information about the incident\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"name\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string name\n    {\n        get\n        {\n            return this._name;\n        }\n        set\n        {\n            this._name = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// Indicates the time (as a date + time) at which the incident occurred at its source\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"occurTime\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public System.DateTime? occurTime\n    {\n        get\n        {\n            return this._occurTime;\n        }\n        set\n        {\n            this._occurTime = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// The last update time  of the incident\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"updateTime\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string updateTime\n    {\n        get\n        {\n            return this._updateTime;\n        }\n        set\n        {\n            this._updateTime = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// Possible values for the ack state of an Incident\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"ackState\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string ackState\n    {\n        get\n        {\n            return this._ackState;\n        }\n        set\n        {\n            this._ackState = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// List of affected entities \n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"affectedEntity\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public EntityRef[] affectedEntity\n    {\n        get\n        {\n            return this._affectedEntity;\n        }\n        set\n        {\n            this._affectedEntity = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// The correlation event object such as alarm, externalAlarm, performance, etc.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"eventId\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public ResourceEntity[] eventId\n    {\n        get\n        {\n            return this._eventId;\n        }\n        set\n        {\n            this._eventId = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// This is used for extend the incident with attributes\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"extensionInfo\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public Characteristic[] extensionInfo\n    {\n        get\n        {\n            return this._extensionInfo;\n        }\n        set\n        {\n            this._extensionInfo = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// An identification of an entity that is owned by or originates in a software system different from the current system, for example a ProductOrder handed off from a commerce platform into an order handling system. The structure identifies the system itself, the nature of the entity within the system (e.g. class name) and the unique ID of the entity within the system. It is anticipated that multiple external IDs can be held for a single entity, e.g. if the entity passed through multiple systems on the way to the current system. In this case the consumer is expected to sequence the IDs in the array in reverse order of provenance, i.e. most recent system first in the list.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"externalIdentifier\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public ExternalIdentifier[] externalIdentifier\n    {\n        get\n        {\n            return this._externalIdentifier;\n        }\n        set\n        {\n            this._externalIdentifier = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// Possible values for the impact of an Incident\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"impact\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string impact\n    {\n        get\n        {\n            return this._impact;\n        }\n        set\n        {\n            this._impact = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// Possible values for the Priority of an Incident\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"priority\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string priority\n    {\n        get\n        {\n            return this._priority;\n        }\n        set\n        {\n            this._priority = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// A root cause is a fundamental or underlying reason behind why an incident occurred that identifies one or more failures. An incident many have multiple rootCauses\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"rootCause\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public RootCause[] rootCause\n    {\n        get\n        {\n            return this._rootCause;\n        }\n        set\n        {\n            this._rootCause = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// The root event object such as alarm, externalAlarm, performance, etc.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"rootEventId\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public ResourceEntity[] rootEventId\n    {\n        get\n        {\n            return this._rootEventId;\n        }\n        set\n        {\n            this._rootEventId = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// The objects show the incident, it may be part of Network Equipment. Fault object, which may be an NE or a port.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"sourceObject\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public ResourceEntity[] sourceObject\n    {\n        get\n        {\n            return this._sourceObject;\n        }\n        set\n        {\n            this._sourceObject = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// Possible values for the state of an Incident\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"state\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string state\n    {\n        get\n        {\n            return this._state;\n        }\n        set\n        {\n            this._state = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// Possible values for the urgency of an Incident\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"urgency\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string urgency\n    {\n        get\n        {\n            return this._urgency;\n        }\n        set\n        {\n            this._urgency = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// When sub-classing, this defines the super-class\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"@baseType\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string @baseType\n    {\n        get\n        {\n            return this._baseType;\n        }\n        set\n        {\n            this._baseType = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// A URI to a JSON-Schema file that defines additional attributes and relationships\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"@schemaLocation\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string @schemaLocation\n    {\n        get\n        {\n            return this._schemaLocation;\n        }\n        set\n        {\n            this._schemaLocation = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// When sub-classing, this defines the sub-class Extensible name\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"@type\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string @type\n    {\n        get\n        {\n            return this._type;\n        }\n        set\n        {\n            this._type = value;\n        }\n    }\n}\n","isNativeDefinition":true},{"name":"IncidentAckStateType","definition":"/// &lt;summary&gt;\n/// Possible values for the ack state of an Incident\n/// &lt;/summary&gt;\npublic sealed class IncidentAckStateType\n{\n}\n","isNativeDefinition":true},{"name":"IncidentCreateEvent","definition":"/// &lt;summary&gt;\n/// The notification data structure\n/// &lt;/summary&gt;\npublic sealed class IncidentCreateEvent\n{\n    \n    private IncidentCreateEventPayload _event;\n    \n    private string _eventId;\n    \n    private System.DateTime? _eventTime;\n    \n    private string _eventType;\n    \n    private string _correlationId;\n    \n    private string _domain;\n    \n    private string _title;\n    \n    private string _description;\n    \n    private string _priority;\n    \n    private System.DateTime? _timeOcurred;\n    \n    /// &lt;summary&gt;\n    /// The event data structure\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"event\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public IncidentCreateEventPayload @event\n    {\n        get\n        {\n            return this._event;\n        }\n        set\n        {\n            this._event = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// The identifier of the notification.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"eventId\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string eventId\n    {\n        get\n        {\n            return this._eventId;\n        }\n        set\n        {\n            this._eventId = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// Time of the event occurrence.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"eventTime\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public System.DateTime? eventTime\n    {\n        get\n        {\n            return this._eventTime;\n        }\n        set\n        {\n            this._eventTime = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// The type of the notification.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"eventType\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string eventType\n    {\n        get\n        {\n            return this._eventType;\n        }\n        set\n        {\n            this._eventType = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// The correlation id for this event.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"correlationId\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string correlationId\n    {\n        get\n        {\n            return this._correlationId;\n        }\n        set\n        {\n            this._correlationId = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// The domain of the event.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"domain\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string domain\n    {\n        get\n        {\n            return this._domain;\n        }\n        set\n        {\n            this._domain = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// The title of the event.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"title\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string title\n    {\n        get\n        {\n            return this._title;\n        }\n        set\n        {\n            this._title = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// An explnatory of the event.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"description\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string description\n    {\n        get\n        {\n            return this._description;\n        }\n        set\n        {\n            this._description = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// A priority.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"priority\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string priority\n    {\n        get\n        {\n            return this._priority;\n        }\n        set\n        {\n            this._priority = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// The time the event occured.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"timeOcurred\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public System.DateTime? timeOcurred\n    {\n        get\n        {\n            return this._timeOcurred;\n        }\n        set\n        {\n            this._timeOcurred = value;\n        }\n    }\n}\n","isNativeDefinition":true},{"name":"IncidentCreateEventPayload","definition":"/// &lt;summary&gt;\n/// The event data structure\n/// &lt;/summary&gt;\npublic sealed class IncidentCreateEventPayload\n{\n    \n    private Incident _incident;\n    \n    /// &lt;summary&gt;\n    /// An Incident is a record of an event that has altered the operational state of a entity (Resource, Service or Customers Product). An incident represents an issue that needs to be diagnosed and resolved.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"incident\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public Incident incident\n    {\n        get\n        {\n            return this._incident;\n        }\n        set\n        {\n            this._incident = value;\n        }\n    }\n}\n","isNativeDefinition":true},{"name":"IncidentRef","definition":"/// &lt;summary&gt;\n/// Incident reference.\n/// &lt;/summary&gt;\npublic sealed class IncidentRef\n{\n    \n    private string _id;\n    \n    private string _href;\n    \n    private string _name;\n    \n    private string _baseType;\n    \n    private string _schemaLocation;\n    \n    private string _type;\n    \n    private string _referredType;\n    \n    /// &lt;summary&gt;\n    /// unique identifier\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"id\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string id\n    {\n        get\n        {\n            return this._id;\n        }\n        set\n        {\n            this._id = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// Hyperlink reference\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"href\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string href\n    {\n        get\n        {\n            return this._href;\n        }\n        set\n        {\n            this._href = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// Name of the related incident\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"name\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string name\n    {\n        get\n        {\n            return this._name;\n        }\n        set\n        {\n            this._name = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// When sub-classing, this defines the super-class\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"@baseType\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string @baseType\n    {\n        get\n        {\n            return this._baseType;\n        }\n        set\n        {\n            this._baseType = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// A URI to a JSON-Schema file that defines additional attributes and relationships\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"@schemaLocation\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string @schemaLocation\n    {\n        get\n        {\n            return this._schemaLocation;\n        }\n        set\n        {\n            this._schemaLocation = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// When sub-classing, this defines the sub-class Extensible name\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"@type\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string @type\n    {\n        get\n        {\n            return this._type;\n        }\n        set\n        {\n            this._type = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// The actual type of the target instance when needed for disambiguation.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"@referredType\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string @referredType\n    {\n        get\n        {\n            return this._referredType;\n        }\n        set\n        {\n            this._referredType = value;\n        }\n    }\n}\n","isNativeDefinition":true},{"name":"IncidentStateChangeEvent","definition":"/// &lt;summary&gt;\n/// The notification data structure\n/// &lt;/summary&gt;\npublic sealed class IncidentStateChangeEvent\n{\n    \n    private IncidentStateChangeEventPayload _event;\n    \n    private string _eventId;\n    \n    private System.DateTime? _eventTime;\n    \n    private string _eventType;\n    \n    private string _correlationId;\n    \n    private string _domain;\n    \n    private string _title;\n    \n    private string _description;\n    \n    private string _priority;\n    \n    private System.DateTime? _timeOcurred;\n    \n    /// &lt;summary&gt;\n    /// The event data structure\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"event\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public IncidentStateChangeEventPayload @event\n    {\n        get\n        {\n            return this._event;\n        }\n        set\n        {\n            this._event = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// The identifier of the notification.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"eventId\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string eventId\n    {\n        get\n        {\n            return this._eventId;\n        }\n        set\n        {\n            this._eventId = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// Time of the event occurrence.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"eventTime\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public System.DateTime? eventTime\n    {\n        get\n        {\n            return this._eventTime;\n        }\n        set\n        {\n            this._eventTime = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// The type of the notification.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"eventType\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string eventType\n    {\n        get\n        {\n            return this._eventType;\n        }\n        set\n        {\n            this._eventType = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// The correlation id for this event.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"correlationId\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string correlationId\n    {\n        get\n        {\n            return this._correlationId;\n        }\n        set\n        {\n            this._correlationId = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// The domain of the event.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"domain\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string domain\n    {\n        get\n        {\n            return this._domain;\n        }\n        set\n        {\n            this._domain = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// The title of the event.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"title\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string title\n    {\n        get\n        {\n            return this._title;\n        }\n        set\n        {\n            this._title = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// An explnatory of the event.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"description\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string description\n    {\n        get\n        {\n            return this._description;\n        }\n        set\n        {\n            this._description = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// A priority.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"priority\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string priority\n    {\n        get\n        {\n            return this._priority;\n        }\n        set\n        {\n            this._priority = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// The time the event occured.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"timeOcurred\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public System.DateTime? timeOcurred\n    {\n        get\n        {\n            return this._timeOcurred;\n        }\n        set\n        {\n            this._timeOcurred = value;\n        }\n    }\n}\n","isNativeDefinition":true},{"name":"IncidentStateChangeEventPayload","definition":"/// &lt;summary&gt;\n/// The event data structure\n/// &lt;/summary&gt;\npublic sealed class IncidentStateChangeEventPayload\n{\n    \n    private Incident _incident;\n    \n    /// &lt;summary&gt;\n    /// An Incident is a record of an event that has altered the operational state of a entity (Resource, Service or Customers Product). An incident represents an issue that needs to be diagnosed and resolved.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"incident\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public Incident incident\n    {\n        get\n        {\n            return this._incident;\n        }\n        set\n        {\n            this._incident = value;\n        }\n    }\n}\n","isNativeDefinition":true},{"name":"IncidentStateType","definition":"/// &lt;summary&gt;\n/// Possible values for the state of an Incident\n/// &lt;/summary&gt;\npublic sealed class IncidentStateType\n{\n}\n","isNativeDefinition":true},{"name":"OracleConfig","definition":"{\r\n    \"$schema\":\"http://natec.tech/simpleschema\",\r\n    \"$ref\":\"#/definitions/OracleConfig\",\r\n    \"definitions\":{\r\n        \"OracleConfig\":{\r\n            \"type\":\"object\",\r\n            \"properties\":{\r\n                \"userId\":{\r\n                    \"type\":\"string\"\r\n                },\r\n                \"password\":{\r\n                    \"type\":\"string\"\r\n                },\r\n                \"dataSource\":{\r\n                    \"type\":\"string\"\r\n                }\r\n            },\r\n            \"required\": [\"userId\", \"password\", \"dataSource\"],\r\n            \"title\":\"OracleConfig\"\r\n        }\r\n    }\r\n}","isNativeDefinition":false},{"name":"PriorityType","definition":"/// &lt;summary&gt;\n/// Possible values for the Priority of an Incident\n/// &lt;/summary&gt;\npublic sealed class PriorityType\n{\n}\n","isNativeDefinition":true},{"name":"ResolveIncident","definition":"/// &lt;summary&gt;\n/// An incident resolution is an action taken to resolve/repair the root cause of an incident or problem, or to implement a workaround\n/// &lt;/summary&gt;\npublic sealed class ResolveIncident\n{\n    \n    private string _id;\n    \n    private string _href;\n    \n    private string _clearTime;\n    \n    private string _errorLog;\n    \n    private IncidentRef _incident;\n    \n    private string _state;\n    \n    private string _baseType;\n    \n    private string _schemaLocation;\n    \n    private string _type;\n    \n    /// &lt;summary&gt;\n    /// Identifier of the  incident to resolve\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"id\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string id\n    {\n        get\n        {\n            return this._id;\n        }\n        set\n        {\n            this._id = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// Reference of the resolve incident task\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"href\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string href\n    {\n        get\n        {\n            return this._href;\n        }\n        set\n        {\n            this._href = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// The clear time  of the incident, for example 2020-03-10T04:01:12Z\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"clearTime\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string clearTime\n    {\n        get\n        {\n            return this._clearTime;\n        }\n        set\n        {\n            this._clearTime = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// Reason for failure\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"errorLog\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string errorLog\n    {\n        get\n        {\n            return this._errorLog;\n        }\n        set\n        {\n            this._errorLog = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// Incident reference.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"incident\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public IncidentRef incident\n    {\n        get\n        {\n            return this._incident;\n        }\n        set\n        {\n            this._incident = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// Possible values for the state of a task\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"state\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string state\n    {\n        get\n        {\n            return this._state;\n        }\n        set\n        {\n            this._state = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// When sub-classing, this defines the super-class\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"@baseType\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string @baseType\n    {\n        get\n        {\n            return this._baseType;\n        }\n        set\n        {\n            this._baseType = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// A URI to a JSON-Schema file that defines additional attributes and relationships\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"@schemaLocation\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string @schemaLocation\n    {\n        get\n        {\n            return this._schemaLocation;\n        }\n        set\n        {\n            this._schemaLocation = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// When sub-classing, this defines the sub-class Extensible name\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"@type\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string @type\n    {\n        get\n        {\n            return this._type;\n        }\n        set\n        {\n            this._type = value;\n        }\n    }\n}\n","isNativeDefinition":true},{"name":"ResolveIncident_Create","definition":"/// &lt;summary&gt;\n/// An incident resolution is an action taken to resolve/repair the root cause of an incident or problem, or to implement a workaround\n///Skipped properties: id,href\n/// &lt;/summary&gt;\npublic sealed class ResolveIncident_Create\n{\n    \n    private string _clearTime;\n    \n    private string _errorLog;\n    \n    private IncidentRef _incident;\n    \n    private string _state;\n    \n    private string _baseType;\n    \n    private string _schemaLocation;\n    \n    private string _type;\n    \n    /// &lt;summary&gt;\n    /// The clear time  of the incident, for example 2020-03-10T04:01:12Z\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"clearTime\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string clearTime\n    {\n        get\n        {\n            return this._clearTime;\n        }\n        set\n        {\n            this._clearTime = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// Reason for failure\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"errorLog\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string errorLog\n    {\n        get\n        {\n            return this._errorLog;\n        }\n        set\n        {\n            this._errorLog = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// Incident reference.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"incident\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public IncidentRef incident\n    {\n        get\n        {\n            return this._incident;\n        }\n        set\n        {\n            this._incident = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// Possible values for the state of a task\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"state\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string state\n    {\n        get\n        {\n            return this._state;\n        }\n        set\n        {\n            this._state = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// When sub-classing, this defines the super-class\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"@baseType\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string @baseType\n    {\n        get\n        {\n            return this._baseType;\n        }\n        set\n        {\n            this._baseType = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// A URI to a JSON-Schema file that defines additional attributes and relationships\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"@schemaLocation\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string @schemaLocation\n    {\n        get\n        {\n            return this._schemaLocation;\n        }\n        set\n        {\n            this._schemaLocation = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// When sub-classing, this defines the sub-class Extensible name\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"@type\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string @type\n    {\n        get\n        {\n            return this._type;\n        }\n        set\n        {\n            this._type = value;\n        }\n    }\n}\n","isNativeDefinition":true},{"name":"ResolveIncidentCreateEvent","definition":"/// &lt;summary&gt;\n/// The notification data structure\n/// &lt;/summary&gt;\npublic sealed class ResolveIncidentCreateEvent\n{\n    \n    private ResolveIncidentCreateEventPayload _event;\n    \n    private string _eventId;\n    \n    private System.DateTime? _eventTime;\n    \n    private string _eventType;\n    \n    private string _correlationId;\n    \n    private string _domain;\n    \n    private string _title;\n    \n    private string _description;\n    \n    private string _priority;\n    \n    private System.DateTime? _timeOcurred;\n    \n    /// &lt;summary&gt;\n    /// The event data structure\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"event\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public ResolveIncidentCreateEventPayload @event\n    {\n        get\n        {\n            return this._event;\n        }\n        set\n        {\n            this._event = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// The identifier of the notification.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"eventId\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string eventId\n    {\n        get\n        {\n            return this._eventId;\n        }\n        set\n        {\n            this._eventId = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// Time of the event occurrence.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"eventTime\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public System.DateTime? eventTime\n    {\n        get\n        {\n            return this._eventTime;\n        }\n        set\n        {\n            this._eventTime = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// The type of the notification.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"eventType\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string eventType\n    {\n        get\n        {\n            return this._eventType;\n        }\n        set\n        {\n            this._eventType = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// The correlation id for this event.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"correlationId\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string correlationId\n    {\n        get\n        {\n            return this._correlationId;\n        }\n        set\n        {\n            this._correlationId = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// The domain of the event.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"domain\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string domain\n    {\n        get\n        {\n            return this._domain;\n        }\n        set\n        {\n            this._domain = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// The title of the event.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"title\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string title\n    {\n        get\n        {\n            return this._title;\n        }\n        set\n        {\n            this._title = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// An explnatory of the event.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"description\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string description\n    {\n        get\n        {\n            return this._description;\n        }\n        set\n        {\n            this._description = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// A priority.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"priority\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string priority\n    {\n        get\n        {\n            return this._priority;\n        }\n        set\n        {\n            this._priority = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// The time the event occured.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"timeOcurred\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public System.DateTime? timeOcurred\n    {\n        get\n        {\n            return this._timeOcurred;\n        }\n        set\n        {\n            this._timeOcurred = value;\n        }\n    }\n}\n","isNativeDefinition":true},{"name":"ResolveIncidentCreateEventPayload","definition":"/// &lt;summary&gt;\n/// The event data structure\n/// &lt;/summary&gt;\npublic sealed class ResolveIncidentCreateEventPayload\n{\n    \n    private ResolveIncident _resolveIncident;\n    \n    /// &lt;summary&gt;\n    /// An incident resolution is an action taken to resolve/repair the root cause of an incident or problem, or to implement a workaround\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"resolveIncident\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public ResolveIncident resolveIncident\n    {\n        get\n        {\n            return this._resolveIncident;\n        }\n        set\n        {\n            this._resolveIncident = value;\n        }\n    }\n}\n","isNativeDefinition":true},{"name":"ResolveIncidentStateChangeEvent","definition":"/// &lt;summary&gt;\n/// The notification data structure\n/// &lt;/summary&gt;\npublic sealed class ResolveIncidentStateChangeEvent\n{\n    \n    private ResolveIncidentStateChangeEventPayload _event;\n    \n    private string _eventId;\n    \n    private System.DateTime? _eventTime;\n    \n    private string _eventType;\n    \n    private string _correlationId;\n    \n    private string _domain;\n    \n    private string _title;\n    \n    private string _description;\n    \n    private string _priority;\n    \n    private System.DateTime? _timeOcurred;\n    \n    /// &lt;summary&gt;\n    /// The event data structure\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"event\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public ResolveIncidentStateChangeEventPayload @event\n    {\n        get\n        {\n            return this._event;\n        }\n        set\n        {\n            this._event = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// The identifier of the notification.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"eventId\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string eventId\n    {\n        get\n        {\n            return this._eventId;\n        }\n        set\n        {\n            this._eventId = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// Time of the event occurrence.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"eventTime\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public System.DateTime? eventTime\n    {\n        get\n        {\n            return this._eventTime;\n        }\n        set\n        {\n            this._eventTime = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// The type of the notification.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"eventType\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string eventType\n    {\n        get\n        {\n            return this._eventType;\n        }\n        set\n        {\n            this._eventType = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// The correlation id for this event.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"correlationId\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string correlationId\n    {\n        get\n        {\n            return this._correlationId;\n        }\n        set\n        {\n            this._correlationId = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// The domain of the event.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"domain\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string domain\n    {\n        get\n        {\n            return this._domain;\n        }\n        set\n        {\n            this._domain = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// The title of the event.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"title\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string title\n    {\n        get\n        {\n            return this._title;\n        }\n        set\n        {\n            this._title = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// An explnatory of the event.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"description\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string description\n    {\n        get\n        {\n            return this._description;\n        }\n        set\n        {\n            this._description = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// A priority.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"priority\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string priority\n    {\n        get\n        {\n            return this._priority;\n        }\n        set\n        {\n            this._priority = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// The time the event occured.\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"timeOcurred\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public System.DateTime? timeOcurred\n    {\n        get\n        {\n            return this._timeOcurred;\n        }\n        set\n        {\n            this._timeOcurred = value;\n        }\n    }\n}\n","isNativeDefinition":true},{"name":"ResolveIncidentStateChangeEventPayload","definition":"/// &lt;summary&gt;\n/// The event data structure\n/// &lt;/summary&gt;\npublic sealed class ResolveIncidentStateChangeEventPayload\n{\n    \n    private ResolveIncident _resolveIncident;\n    \n    /// &lt;summary&gt;\n    /// An incident resolution is an action taken to resolve/repair the root cause of an incident or problem, or to implement a workaround\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"resolveIncident\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public ResolveIncident resolveIncident\n    {\n        get\n        {\n            return this._resolveIncident;\n        }\n        set\n        {\n            this._resolveIncident = value;\n        }\n    }\n}\n","isNativeDefinition":true},{"name":"ResourceEntity","definition":"/// &lt;summary&gt;\n/// Base schema for REST Resources\n/// &lt;/summary&gt;\npublic sealed class ResourceEntity\n{\n    \n    private string _id;\n    \n    private string _href;\n    \n    private string _baseType;\n    \n    private string _schemaLocation;\n    \n    private string _type;\n    \n    /// &lt;summary&gt;\n    /// ID created by the implementing service\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"id\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string id\n    {\n        get\n        {\n            return this._id;\n        }\n        set\n        {\n            this._id = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// Hyperlink to access the test resource\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"href\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string href\n    {\n        get\n        {\n            return this._href;\n        }\n        set\n        {\n            this._href = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// When sub-classing, this defines the super-class\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"@baseType\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string @baseType\n    {\n        get\n        {\n            return this._baseType;\n        }\n        set\n        {\n            this._baseType = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// A URI to a JSON-Schema file that defines additional attributes and relationships\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"@schemaLocation\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string @schemaLocation\n    {\n        get\n        {\n            return this._schemaLocation;\n        }\n        set\n        {\n            this._schemaLocation = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// When sub-classing, this defines the sub-class Extensible name\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"@type\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string @type\n    {\n        get\n        {\n            return this._type;\n        }\n        set\n        {\n            this._type = value;\n        }\n    }\n}\n","isNativeDefinition":true},{"name":"RootCause","definition":"/// &lt;summary&gt;\n/// The name of RootCause, for example:Power Down\n/// &lt;/summary&gt;\npublic sealed class RootCause\n{\n    \n    private string _id;\n    \n    private string _href;\n    \n    private string _location;\n    \n    private string _baseType;\n    \n    private string _schemaLocation;\n    \n    private string _type;\n    \n    /// &lt;summary&gt;\n    /// unique identifier\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"id\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string id\n    {\n        get\n        {\n            return this._id;\n        }\n        set\n        {\n            this._id = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// Hyperlink reference\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"href\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string href\n    {\n        get\n        {\n            return this._href;\n        }\n        set\n        {\n            this._href = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// \n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"location\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string location\n    {\n        get\n        {\n            return this._location;\n        }\n        set\n        {\n            this._location = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// When sub-classing, this defines the super-class\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"@baseType\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string @baseType\n    {\n        get\n        {\n            return this._baseType;\n        }\n        set\n        {\n            this._baseType = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// A URI to a JSON-Schema file that defines additional attributes and relationships\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"@schemaLocation\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string @schemaLocation\n    {\n        get\n        {\n            return this._schemaLocation;\n        }\n        set\n        {\n            this._schemaLocation = value;\n        }\n    }\n    \n    /// &lt;summary&gt;\n    /// When sub-classing, this defines the sub-class Extensible name\n    /// &lt;/summary&gt;\n    // \n    [Newtonsoft.Json.JsonPropertyAttribute(PropertyName=\"@type\", NullValueHandling=Newtonsoft.Json.NullValueHandling.Ignore)]\n    public string @type\n    {\n        get\n        {\n            return this._type;\n        }\n        set\n        {\n            this._type = value;\n        }\n    }\n}\n","isNativeDefinition":true},{"name":"SystemException","definition":"{\r\n   \"$schema\":\"http://natec.tech/simpleschema\",\r\n   \"$ref\":\"#/definitions/SystemException\",\r\n   \"definitions\":{\r\n      \"SystemException\":{\r\n         \"type\":\"object\",\r\n         \"properties\":{\r\n            \"Exception\":{\r\n               \"type\":\"types://core/System.Exception\"\r\n            },\r\n            \"info\":{\r\n               \"type\":\"string\"\r\n            }\r\n         },\r\n         \"title\":\"SystemException\"\r\n      }\r\n   }\r\n}","isNativeDefinition":false},{"name":"TaskStateType","definition":"/// &lt;summary&gt;\n/// Possible values for the state of a task\n/// &lt;/summary&gt;\npublic sealed class TaskStateType\n{\n}\n","isNativeDefinition":true},{"name":"TestClass","definition":"\r\n/// A &amp;product @to be @created defined by value or existing defined by reference. The polymorphic attributes type, schemaLocation referredType are related to the product entity and not the RelatedProductRefOrValue class itself\r\n\r\npublic class TestClass { \r\n\tpublic int Id {get;set;}\r\n}","isNativeDefinition":true},{"name":"UrgencyType","definition":"/// &lt;summary&gt;\n/// Possible values for the urgency of an Incident\n/// &lt;/summary&gt;\npublic sealed class UrgencyType\n{\n}\n","isNativeDefinition":true}]</gp:globalParameter>
    <gp:globalParameter name="ExternalTypes">[]</gp:globalParameter>
    <gp:globalParameter name="CodeActions">[{"name":"CodeActionExample","initCode":"Json CodeActionExample (\n\t\tJson inputData\n\t)      \n    {\n    try \n    { \n       \n        Logger.LogInformation($\"CodeActionExample:: started\");\n        // TODO Insert your code here\n        Logger.LogInformation($\"CodeActionExample:: finished\");\n        return inputData;\n    }\n    catch (Exception e) {\n            Logger.LogError($\"CodeActionExample:: error {e}\");\n            throw new Exception($\"CodeActionExample:: error {e}\");\n    }\n    \n    }","initParameters":[{"name":"Result","type":"Json"},{"name":"inputData","type":"Json","required":false}]},{"name":"HandleException","initCode":"ErrorResponse HandleException (\n\t\tPassingResult prevData\n\t)        \n    {\n         try\n    {\n        //investigate the Exception \n        Logger.LogInformation($\"Exception name : {prevData.Exception.GetType().Name}\");\n         //casting to exception example\n        OracleException exception = null;\n        if (prevData.Exception is OracleException)\n        {\n             exception = prevData.Exception as OracleException;\n        }\n \n        //forming the HTTP error result\n        if (WorkflowEnvironment.RuntimeName == \"UCP\")\n            WorkflowEnvironment.Variables[\"StatusCode\"] = 500;\n        return new ErrorResponse()\n        {\n            Message = string.Concat(prevData.Exception.Message, $\"({prevData.Exception.InnerException?.Message})\"),\n            LevelMessage = \"11\",\n            statusCode = 500,\n            State = \"1\",\n            //ErrNumber = exception.Number.ToString()\n        }; \n    }\n    catch (Exception e) {\n            Logger.LogError($\"HandleException:: error {e}\");\n            throw new Exception($\"HandleException:: error {e}\");\n    }\n    }","initParameters":[{"name":"Result","type":"ErrorResponse"},{"name":"prevData","type":"PassingResult","required":true}]},{"name":"InspectOracleResult","initCode":"string[] InspectOracleResult (\n\t\tCollection oracleData\n\t)        \n    {\n            //get single value\n            //Logger.LogInformation($\"get single value of FIELD_NAME1 by index: syntax oracleData[index].FIELD_NAME1\");\n            var field_first = oracleData[0].FIELD_NAME1;\n\n            //enumeration of FIELD_NAME1 (with LINQ)\n            var field_rows = from row in oracleData\n                               select row.FIELD_NAME1;\n            //passing by enumeration\n            Logger.LogInformation($\"passing by enumeration field_rows of var1: syntax FIELD_NAME1:var1\");\n            foreach (var field1 in field_rows)\n                Logger.LogInformation($\"FIELD_NAME1:{field1}\");\n\n            //get array of msisdn from enumeration\n            Logger.LogInformation($\"get array from enumeration: syntax field_rows.ToArray()\");\n            var myArray = field_rows.ToArray();\n            //get first value from array\n            var field_from_Array = myArray[0];\n\n            //passing by enumeration of whole dataset\n            Logger.LogInformation($\"passing by enumeration of whole dataset: syntax FIELD_NAME1:row.FIELD_NAME1, FIELD_NAME2:row.FIELD_NAME2 etc...\");\n            foreach (var row in oracleData)\n                Logger.LogInformation($\"FIELD_NAME1:{row.FIELD_NAME1}\");\n\n            //convert whole dataset to string \n            var field_list = from row in oracleData\n                            select row.FIELD_NAME1 as string;\n            //convert string to string array \n            return field_list.ToList();\n\n    }","initParameters":[{"name":"Result","type":"string[]"},{"name":"oracleData","type":"Collection","required":true}]},{"name":"return201","initCode":"DiagnoseIncident return201 (\n\t\tobject inputData\n\t)  \n    {\n        \n        WorkflowEnvironment.Variables[\"StatusCode\"] = 201;\n        if (WorkflowEnvironment.Variables.TryGetValue    (\"HttpResponse\", out object httpResponseObj))\n                {\n                    Microsoft.AspNetCore.Http.HttpResponse response =     httpResponseObj as Microsoft.AspNetCore.Http.HttpResponse;\n                    response.StatusCode = 201;\n                }\n        return inputData as DiagnoseIncident;\n    }","initParameters":[{"name":"Result","type":"DiagnoseIncident"},{"name":"inputData","type":"object","required":false}]},{"name":"TestCodeAction","initCode":"string[] TestCodeAction (\n\t\tstring arg\n\t)  \n    {\n        // TODO Insert your code here\n    }","initParameters":[{"name":"Result","type":"string[]"},{"name":"arg","type":"string","required":false}]}]</gp:globalParameter>
    <gp:globalParameter name="UsedLibs">[]</gp:globalParameter>
    <gp:globalParameter name="Functions">[{"name":"RestApi","initCode":"functions://default/RestApi","initParameters":[{"name":"Uri","type":"Uri","required":true,"oldName":"Uri","oldType":"Uri","defaultValue":"http://servername:port/resource"},{"name":"Method","type":"string","required":true,"oldName":"Method","oldType":"string","defaultValue":"GET"},{"name":"Login","type":"string","required":false,"oldName":"Login","oldType":"string","defaultValue":null},{"name":"Password","type":"string","required":false,"oldName":"Password","oldType":"string","defaultValue":null},{"name":"Headers","type":"StringDictionary","required":false,"oldName":"Headers","oldType":"StringDictionary","defaultValue":"{\r\n               \"Content-Type\":\"application/json;charset=utf-16\",\r\n               \"system\":\"204\",\r\n               \"global_unique_id\":\"6a297fcb-956e-4228-8c11-017e9bacd629\"\r\n            }"},{"name":"Body","type":"string","required":false,"oldName":"Body","oldType":"string","defaultValue":"{}"},{"name":"Encoding","type":"string","required":false,"oldName":"Encoding","oldType":"string","defaultValue":"utf-8"},{"name":"Timeout","type":"int","required":false,"oldName":"Timeout","oldType":"int","defaultValue":"0"},{"name":"Result","type":"HttpResponse","required":false,"oldName":"Result","oldType":"HttpResponse","defaultValue":null}],"oldName":"RestApi"},{"name":"RestApi/GET","initCode":"functions://default/RestApi/Get","initParameters":[{"name":"Uri","type":"Uri","required":true,"oldName":"Uri","oldType":"Uri","defaultValue":"http://servername:port/resource"},{"name":"Login","type":"string","required":false,"oldName":"Login","oldType":"string","defaultValue":null},{"name":"Password","type":"string","required":false,"oldName":"Password","oldType":"string","defaultValue":null},{"name":"Headers","type":"StringDictionary","required":false,"oldName":"Headers","oldType":"StringDictionary","defaultValue":"{\r\n               \"Content-Type\":\"application/json;charset=utf-16\",\r\n               \"system\":\"204\",\r\n               \"global_unique_id\":\"6a297fcb-956e-4228-8c11-017e9bacd629\"\r\n            }"},{"name":"Encoding","type":"string","required":false,"oldName":"Encoding","oldType":"string","defaultValue":"utf-8"},{"name":"Timeout","type":"int","required":false,"oldName":"Timeout","oldType":"int","defaultValue":"0"},{"name":"Result","type":"HttpResponse","required":false,"oldName":"Result","oldType":"HttpResponse","defaultValue":null}],"oldName":"RestApi/GET"},{"name":"JsonPath","initCode":"functions://default//JsonPath","initParameters":[{"name":"Response","type":"HttpResponse","required":true,"oldName":"Response","oldType":"HttpResponse","defaultValue":null},{"name":"Path","type":"string","required":false,"oldName":"Path","oldType":"string","defaultValue":"$"},{"name":"Result","type":"Json","required":false,"oldName":"Result","oldType":"Json","defaultValue":null}],"oldName":"JsonPath"},{"name":"SaveVariable","initCode":"functions://default//SaveVariable","initParameters":[{"name":"VariableName","type":"string","required":true,"oldName":"VariableName","oldType":"string","defaultValue":"varName"},{"name":"Data","type":"object","required":true,"oldName":"Data","oldType":"object","defaultValue":"#previous"}],"oldName":"SaveVariable"},{"name":"SQL/Oracle/Query","initCode":"functions://default//SQL/Oracle/Query","initParameters":[{"name":"userID","type":"string","required":true,"oldName":"userID","oldType":"string","defaultValue":null},{"name":"password","type":"string","required":false,"oldName":"password","oldType":"string","defaultValue":null},{"name":"dataSource","type":"string","required":false,"oldName":"dataSource","oldType":"string","defaultValue":null},{"name":"query","type":"string","required":false,"oldName":"query","oldType":"string","defaultValue":null},{"name":"Result","type":"Collection","required":false,"oldName":"Result","oldType":"Collection","defaultValue":null}],"oldName":"SQL/Oracle/Query"},{"name":"SQL/Oracle/Command","initCode":"functions://default//SQL/Oracle/Command","initParameters":[{"name":"userID","type":"string","required":true,"oldName":"userID","oldType":"string","defaultValue":null},{"name":"password","type":"string","required":false,"oldName":"password","oldType":"string","defaultValue":null},{"name":"dataSource","type":"string","required":false,"oldName":"dataSource","oldType":"string","defaultValue":null},{"name":"command","type":"string","required":false,"oldName":"command","oldType":"string","defaultValue":null},{"name":"Result","type":"int","required":false,"oldName":"Result","oldType":"int","defaultValue":null}],"oldName":"SQL/Oracle/Command"}]</gp:globalParameter>
    <gp:globalParameter name="ExternalDefinitionLib">[]</gp:globalParameter>
    <gp:globalParameter name="Parameters">[{"name":"oracleConfig","type":"OracleConfig","initialValue":"{\r\n   \"userId\":\"wcb2fcs\",\r\n   \"password\":\"natec2fcs_2019\",\r\n   \"dataSource\":\"10.49.1.198:1521/bisdb_prm.kyivstar.ua\"\r\n}\r\n"},{"name":"httpConfig","type":"HttpConfig","initialValue":"{\r\n   \"host\":\"https://10.29.101.122\",\r\n   \"port\":\"6992\",\r\n   \"login\":\"api_user\",\r\n   \"password\":\"Widecoup1\",\r\n   \"encoding\":\"utf-8\",\r\n   \"headers\":{\r\n      \"Content-Type\":\"application/vnd.api+json\",\r\n      \"Accept\":\"application/vnd.api+json\"\r\n   }\r\n}\r\n"}]</gp:globalParameter>
    <gp:globalParameter name="DebugParamas">{"id":null,"errorLog":null,"incident":{"id":null,"category":"software fault","incidentDetail":"router ping is not successfull","incidentResolutionSuggestion":null,"rootCause":null,"name":"Incident router","@type":"Incident"},"state":null,"@type":"DiagnoseIncident"}</gp:globalParameter>
    <gp:globalParameter name="ExecuteParamas">{"id":null,"errorLog":null,"incident":{"id":null,"category":"software fault","incidentDetail":"router ping is not successfull","incidentResolutionSuggestion":null,"rootCause":null,"name":"Incident router","@type":"Incident"},"state":null,"@type":"DiagnoseIncident"}</gp:globalParameter>
  </extensionElements>
  <process id="Process_1llnnqn" name="incident-api-gateway">
    <startEvent id="Event_1hk2ab0" name="">
      <extensionElements>
        <ep:elementParameter name="StartSignalRoute">{"status":"HttpRequestAttributes","method":"POST","route":"diagnoseIncident","remarks":"This operation creates a DiagnoseIncident entity with Incident at the same time, thus the DiagnoseIncident model was changed. namely the IncidentRef was replaced to the Incident model","summary":"Creates a DiagnoseIncident","requestName":"DiagnoseIncident_Create","examples":{"Create DiagnoseIncident":{"summary":"Create DiagnoseIncident","description":"This operation creates a DiagnoseIncident and This operation creates a DiagnoseIncident and Incident entitiesentities on base provided Category of  the This operation creates a DiagnoseIncident and Incident entities","value":"{\n   \"id\":null,\n   \"errorLog\":null,\n   \"incident\":{\n      \"id\":\"null\",\n      \"category\":\"software fault\",\n      \"incidentDetail\":\"router ping is not successfull\",\n      \"incidentResolutionSuggestion\":null,\n      \"rootCause\":null,\n      \"name\":\"Incident router\",\n      \"@type\":\"Incident\"\n   },\n   \"state\":null,\n   \"@type\":\"DiagnoseIncident\"\n}"}}}</ep:elementParameter>
      </extensionElements>
      <outgoing>Flow_0xuw6mo</outgoing>
      <dataOutputAssociation id="DataOutputAssociation_1nmd8bj">
        <targetRef>DataObjectReference_0eqkq7z</targetRef>
      </dataOutputAssociation>
    </startEvent>
    <endEvent id="Event_0sav6wr">
      <extensionElements>
        <ep:elementParameter name="EndSignalRoute">{"status":"HttpRequestAttributes","code":201,"body":"Create DiagnoseIncident","exampelsVariants":[{"title":"Create DiagnoseIncident","value":"{\n   \"id\":3333,\n   \"errorLog\":null,\n   \"incident\":{\n      \"id\":\"222\",\n      \"name\":\"Incident router\",\n      \"@type\":\"IncidentRef\"\n   },\n   \"state\":\"accepted\",\n   \"@type\":\"DiagnoseIncident\"\n}"}],"headers":"{\n   \"Accept-Encoding\":\"gzip, deflate, br\",\n   \"x-ms-client-request-id\":\"20412345678903142363734\",\n   \"Content-Type\":\"pplication/json\",\n   \"Accept-Language\":\"en\",\n   \"Accept-Charset\":\"utf-8\"\n}"}</ep:elementParameter>
      </extensionElements>
      <incoming>Flow_1odrf7f</incoming>
      <property id="Property_1rqqtzp" name="__targetRef_placeholder" />
      <dataInputAssociation id="DataInputAssociation_0e36m15">
        <sourceRef>DataObjectReference_1a2hfh4</sourceRef>
        <targetRef>Property_1rqqtzp</targetRef>
      </dataInputAssociation>
    </endEvent>
    <sequenceFlow id="Flow_0xuw6mo" sourceRef="Event_1hk2ab0" targetRef="Activity_032n3i8" />
    <dataObjectReference id="DataObjectReference_0eqkq7z" name="Json" dataObjectRef="DataObject_0tr0hnf" />
    <dataObject id="DataObject_0tr0hnf" />
    <dataObjectReference id="DataObjectReference_1a2hfh4" name="DiagnoseIncident" dataObjectRef="DataObject_080emqn" />
    <dataObject id="DataObject_080emqn" />
    <task id="Activity_032n3i8" name="mock">
      <extensionElements>
        <ep:elementParameter name="ElementImplementation">{"actionType":"Expression","action":"var di = new DiagnoseIncident();\n\ndi.id = \"1234\";\ndi.errorLog = null;\ndi.state = null;\ndi.@type = \"DiagnoseIncident\";\ndi.state = \"accepted\";\n\ndi.incident = new IncidentRef();\n\ndi.incident.id = \"2345\";\ndi.incident.@type = \"IncidentRef\";\ndi.incident.name = Input?[\"incident\"]?[\"name\"];\n//di.incident.category = Input?[\"incident\"]?[\"category\"];\n//di.incident.incidentDetail = Input?[\"incident\"]?[\"incidentDetail\"];\n//di.incident.rootCause = Input?[\"incident\"]?[\"rootCause\"];\n//di.incident.incidentResolutionSuggestion = Input?[\"incident\"]?[\"incidentResolutionSuggestion\"];\n\n\nreturn di;"}</ep:elementParameter>
      </extensionElements>
      <incoming>Flow_0xuw6mo</incoming>
      <outgoing>Flow_10j5jpn</outgoing>
    </task>
    <task id="Activity_0d8jjvd" name="201 status code">
      <extensionElements>
        <ep:elementParameter name="ElementImplementation">{"actionType":"Action","action":"return201","actionParam":{"inputData":"#Previous"},"libName":"","libEntity":"","libMethod":""}</ep:elementParameter>
      </extensionElements>
      <incoming>Flow_10j5jpn</incoming>
      <outgoing>Flow_1odrf7f</outgoing>
    </task>
    <sequenceFlow id="Flow_10j5jpn" sourceRef="Activity_032n3i8" targetRef="Activity_0d8jjvd" />
    <sequenceFlow id="Flow_1odrf7f" sourceRef="Activity_0d8jjvd" targetRef="Event_0sav6wr" />
  </process>
  <bpmndi:BPMNDiagram id="sid-74620812-92c4-44e5-949c-aa47393d3830">
    <bpmndi:BPMNPlane id="sid-cdcae759-2af7-4a6d-bd02-53f3352a731d" bpmnElement="Process_1llnnqn">
      <bpmndi:BPMNShape id="Event_1hk2ab0_di" bpmnElement="Event_1hk2ab0">
        <omgdc:Bounds x="312" y="22" width="36" height="36" />
        <bpmndi:BPMNLabel>
          <omgdc:Bounds x="411" y="-2" width="23" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Event_0sav6wr_di" bpmnElement="Event_0sav6wr">
        <omgdc:Bounds x="722" y="22" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="DataObjectReference_0eqkq7z_di" bpmnElement="DataObjectReference_0eqkq7z">
        <omgdc:Bounds x="242" y="15" width="36" height="50" />
        <bpmndi:BPMNLabel>
          <omgdc:Bounds x="248" y="72" width="25" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="DataObjectReference_1a2hfh4_di" bpmnElement="DataObjectReference_1a2hfh4">
        <omgdc:Bounds x="852" y="15" width="36" height="50" />
        <bpmndi:BPMNLabel>
          <omgdc:Bounds x="830" y="72" width="88" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_032n3i8_di" bpmnElement="Activity_032n3i8">
        <omgdc:Bounds x="400" y="0" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_0d8jjvd_di" bpmnElement="Activity_0d8jjvd">
        <omgdc:Bounds x="560" y="0" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="DataOutputAssociation_1nmd8bj_di" bpmnElement="DataOutputAssociation_1nmd8bj">
        <di:waypoint x="312" y="40" />
        <di:waypoint x="278" y="40" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="DataInputAssociation_0e36m15_di" bpmnElement="DataInputAssociation_0e36m15">
        <di:waypoint x="852" y="40" />
        <di:waypoint x="758" y="40" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0xuw6mo_di" bpmnElement="Flow_0xuw6mo">
        <di:waypoint x="348" y="40" />
        <di:waypoint x="400" y="40" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_10j5jpn_di" bpmnElement="Flow_10j5jpn">
        <di:waypoint x="500" y="40" />
        <di:waypoint x="560" y="40" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1odrf7f_di" bpmnElement="Flow_1odrf7f">
        <di:waypoint x="660" y="40" />
        <di:waypoint x="722" y="40" />
      </bpmndi:BPMNEdge>
    </bpmndi:BPMNPlane>
    <bpmndi:BPMNLabelStyle id="sid-e0502d32-f8d1-41cf-9c4a-cbb49fecf581">
      <omgdc:Font name="Arial" size="11" isBold="false" isItalic="false" isUnderline="false" isStrikeThrough="false" />
    </bpmndi:BPMNLabelStyle>
    <bpmndi:BPMNLabelStyle id="sid-84cb49fd-2f7c-44fb-8950-83c3fa153d3b">
      <omgdc:Font name="Arial" size="12" isBold="false" isItalic="false" isUnderline="false" isStrikeThrough="false" />
    </bpmndi:BPMNLabelStyle>
  </bpmndi:BPMNDiagram>
</definitions>
